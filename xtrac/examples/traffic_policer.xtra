import "standard_headers.xtrah";

Stage connection {
	// Initialized to 0
	Register global BQ, frequency, B, Q;
	
	Register Tmin, Tmax;

	setFlowKey(ipv4.src);

	State initial init {
		on (pktRcvd){
			if (currentTime > Tmax) {
				B = 10;
				Q = 100;
				BQ = B*Q;
				Tmin = currentTime - BQ; 
				Tmax = currentTime + frequency;
				setNextStage(forward);
			}
		}
	}


	State established {
		on (pktRcvd){
			if (Tmin < currentTime, currentTime <= Tmax) {
				Tmin = Tmin + Q; 
				Tmax = Tmax + Q;
				setNextStage(forward);
			}

			if (currentTime > Tmax) {
				Tmin = currentTime - BQ; 
				Tmax = currentTime + frequency;
				setNextStage(forward);
			}
		}
	}
}


// Stage Stateless
Stage forward {
	setFlowKey();

	State initial init {
		// Send
		on (pktRcvd){
			sendPacket(255, 1);
		}
	}
}

	